{"ast":null,"code":"var _jsxFileName = \"E:\\\\Reataurent POS\\\\Restaurent-Front-end\\\\src\\\\pages\\\\Category\\\\AllCategory.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// const AllCategory = () => {\n//   const [categories, setCategories] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(\"\");\n//   const [searchTerm, setSearchTerm] = useState(\"\"); // For search functionality\n//   const [currentPage, setCurrentPage] = useState(1); // For pagination\n//   const [itemsPerPage] = useState(10); // Items per page\n\n//   // Fetch categories from the API\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:8000/api/category\");\n//         console.log(response.data.categories); // Log the API response\n//         setCategories(response.data.categories); // Store categories in state\n//       } catch (err) {\n//         setError(\"Failed to fetch categories.\");\n//       } finally {\n//         setLoading(false); // Stop loading once data is fetched\n//       }\n//     };\n\n//     fetchCategories();\n//   }, []);\n\n//   // Handle search with optional chaining and fallback\n//   const filteredCategories = categories.filter((category) =>\n//     category?.name?.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   // Pagination logic\n//   const indexOfLastItem = currentPage * itemsPerPage;\n//   const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//   const currentItems = filteredCategories.slice(\n//     indexOfFirstItem,\n//     indexOfLastItem\n//   );\n\n//   // Change page\n//   const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n//   if (loading) {\n//     return <div className=\"text-center mt-5\">Loading...</div>; // Show loading state while fetching\n//   }\n\n//   if (error) {\n//     return <div className=\"text-danger text-center mt-5\">{error}</div>; // Show error message if fetching fails\n//   }\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <div className=\"card shadow\">\n//         <div className=\"card-header bg-primary text-white\">\n//           <h4 className=\"mb-0\">Category List</h4>\n//         </div>\n//         <div className=\"card-body\">\n//           {/* Search Input */}\n//           <div className=\"mb-3\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"Search by name...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//           </div>\n\n//           {/* Table */}\n//           <div className=\"table-responsive\">\n//             <table className=\"table table-striped table-hover\">\n//               <thead className=\"table-dark\">\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Position</th>\n//                   <th>Office</th>\n//                   <th>Age</th>\n//                   <th>Start Date</th>\n//                   <th>Salary</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {currentItems.map((category, index) => (\n//                   <tr key={index}>\n//                     <td>{category?.name || \"N/A\"}</td>\n//                     <td>{category?.position || \"N/A\"}</td>\n//                     <td>{category?.office || \"N/A\"}</td>\n//                     <td>{category?.age || \"N/A\"}</td>\n//                     <td>{category?.startDate || \"N/A\"}</td>\n//                     <td>{category?.salary || \"N/A\"}</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n\n//           {/* Pagination */}\n//           <nav>\n//             <ul className=\"pagination justify-content-center\">\n//               {Array.from({\n//                 length: Math.ceil(filteredCategories.length / itemsPerPage),\n//               }).map((_, index) => (\n//                 <li\n//                   key={index}\n//                   className={`page-item ${\n//                     currentPage === index + 1 ? \"active\" : \"\"\n//                   }`}\n//                 >\n//                   <button\n//                     className=\"page-link\"\n//                     onClick={() => paginate(index + 1)}\n//                   >\n//                     {index + 1}\n//                   </button>\n//                 </li>\n//               ))}\n//             </ul>\n//           </nav>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AllCategory;\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonStyle = {\n  color: \"white\",\n  backgroundColor: \"#007bff\",\n  borderColor: \"#007bff\"\n};\nconst AllCategory = () => {\n  _s();\n  const navigate = useNavigate();\n  const [data1, setData1] = useState([]); // Store fetched data\n  const [filteredData, setFilteredData] = useState([]); // Store filtered data\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: \"ascending\"\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(5);\n\n  // Fetch data from the API\n  useEffect(() => {\n    const fetchPostData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/api/category\");\n        //  console.log(response);\n        // Check if the response contains the data array\n        if (response.data) {\n          setData1(response.data); // Use the nested 'data' array\n          console.log(response.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error.message);\n      }\n    };\n    fetchPostData();\n  }, []); // Empty dependency array means this runs once when the component mounts\n\n  // Search functionality\n  useEffect(() => {\n    if (Array.isArray(data1)) {\n      const filtered = data1.filter(item => Object.values(item).some(val => val === null || val === void 0 ? void 0 : val.toString().toLowerCase().includes(searchTerm.toLowerCase())));\n      setFilteredData(filtered);\n      setCurrentPage(1); // Reset to first page on search\n    }\n  }, [searchTerm, data1]);\n\n  // Sort functionality\n  const requestSort = key => {\n    let direction = \"ascending\";\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  useEffect(() => {\n    if (sortConfig.key && Array.isArray(filteredData)) {\n      const sortedData = [...filteredData].sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n      setFilteredData(sortedData);\n    }\n  }, [sortConfig, filteredData]);\n\n  // Pagination calculations\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  console.log(filteredData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between my-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Member List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(\"name\"),\n              style: {\n                cursor: \"pointer\"\n              },\n              children: [\"Member Name\", \" \", sortConfig.key === \"name\" && (sortConfig.direction === \"ascending\" ? \"↑\" : \"↓\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(\"sex\"),\n              style: {\n                cursor: \"pointer\"\n              },\n              children: [\"Nomine Gender\", \" \", sortConfig.key === \"nomine_gender\" && (sortConfig.direction === \"ascending\" ? \"↑\" : \"↓\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(\"date_birthday\"),\n              style: {\n                cursor: \"pointer\"\n              },\n              children: [\"Birthday Date\", \" \", sortConfig.key === \"date_birthday\" && (sortConfig.direction === \"ascending\" ? \"↑\" : \"↓\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(\"action\"),\n              style: {\n                cursor: \"pointer\"\n              },\n              children: [\"Action\", \" \", sortConfig.key === \"action\" && (sortConfig.direction === \"ascending\" ? \"↑\" : \"↓\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentItems.length > 0 ? currentItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.sex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.date_of_birth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: buttonStyle,\n              className: \"btn btn-primary\",\n              onClick: () => navigate(`/insurance-form/${item.id}/${item.name}/${item.account_number}/${item.sex}/${item.date_of_birth}`),\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"3\",\n              className: \"text-center\",\n              children: \"No data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === 1 ? \"disabled\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-link\",\n            onClick: () => paginate(1),\n            disabled: currentPage === 1,\n            children: \"First\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === 1 ? \"disabled\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-link\",\n            onClick: () => paginate(currentPage - 1),\n            disabled: currentPage === 1,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), [...Array(totalPages)].map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === index + 1 ? \"active\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-link\",\n            onClick: () => paginate(index + 1),\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === totalPages ? \"disabled\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-link\",\n            onClick: () => paginate(currentPage + 1),\n            disabled: currentPage === totalPages,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === totalPages ? \"disabled\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-link\",\n            onClick: () => paginate(totalPages),\n            disabled: currentPage === totalPages,\n            children: \"Last\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing \", indexOfFirstItem + 1, \" to\", \" \", Math.min(indexOfLastItem, filteredData.length), \" of\", \" \", filteredData.length, \" entries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCategory, \"izMrrxz1T9SAYwWg5+udq9LeZoo=\", false, function () {\n  return [useNavigate];\n});\n_c = AllCategory;\nexport default AllCategory;\nvar _c;\n$RefreshReg$(_c, \"AllCategory\");","map":{"version":3,"names":["axios","React","useState","useEffect","Button","Link","Navigate","useNavigate","jsxDEV","_jsxDEV","buttonStyle","color","backgroundColor","borderColor","AllCategory","_s","navigate","data1","setData1","filteredData","setFilteredData","sortConfig","setSortConfig","key","direction","searchTerm","setSearchTerm","currentPage","setCurrentPage","itemsPerPage","fetchPostData","response","get","data","console","log","error","message","Array","isArray","filtered","filter","item","Object","values","some","val","toString","toLowerCase","includes","requestSort","sortedData","sort","a","b","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","paginate","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","cursor","map","index","name","sex","date_of_birth","id","account_number","colSpan","disabled","_","min","_c","$RefreshReg$"],"sources":["E:/Reataurent POS/Restaurent-Front-end/src/pages/Category/AllCategory.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const AllCategory = () => {\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(\"\");\r\n//   const [searchTerm, setSearchTerm] = useState(\"\"); // For search functionality\r\n//   const [currentPage, setCurrentPage] = useState(1); // For pagination\r\n//   const [itemsPerPage] = useState(10); // Items per page\r\n\r\n//   // Fetch categories from the API\r\n//   useEffect(() => {\r\n//     const fetchCategories = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:8000/api/category\");\r\n//         console.log(response.data.categories); // Log the API response\r\n//         setCategories(response.data.categories); // Store categories in state\r\n//       } catch (err) {\r\n//         setError(\"Failed to fetch categories.\");\r\n//       } finally {\r\n//         setLoading(false); // Stop loading once data is fetched\r\n//       }\r\n//     };\r\n\r\n//     fetchCategories();\r\n//   }, []);\r\n\r\n//   // Handle search with optional chaining and fallback\r\n//   const filteredCategories = categories.filter((category) =>\r\n//     category?.name?.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   // Pagination logic\r\n//   const indexOfLastItem = currentPage * itemsPerPage;\r\n//   const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n//   const currentItems = filteredCategories.slice(\r\n//     indexOfFirstItem,\r\n//     indexOfLastItem\r\n//   );\r\n\r\n//   // Change page\r\n//   const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n//   if (loading) {\r\n//     return <div className=\"text-center mt-5\">Loading...</div>; // Show loading state while fetching\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div className=\"text-danger text-center mt-5\">{error}</div>; // Show error message if fetching fails\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <div className=\"card shadow\">\r\n//         <div className=\"card-header bg-primary text-white\">\r\n//           <h4 className=\"mb-0\">Category List</h4>\r\n//         </div>\r\n//         <div className=\"card-body\">\r\n//           {/* Search Input */}\r\n//           <div className=\"mb-3\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Search by name...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Table */}\r\n//           <div className=\"table-responsive\">\r\n//             <table className=\"table table-striped table-hover\">\r\n//               <thead className=\"table-dark\">\r\n//                 <tr>\r\n//                   <th>Name</th>\r\n//                   <th>Position</th>\r\n//                   <th>Office</th>\r\n//                   <th>Age</th>\r\n//                   <th>Start Date</th>\r\n//                   <th>Salary</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {currentItems.map((category, index) => (\r\n//                   <tr key={index}>\r\n//                     <td>{category?.name || \"N/A\"}</td>\r\n//                     <td>{category?.position || \"N/A\"}</td>\r\n//                     <td>{category?.office || \"N/A\"}</td>\r\n//                     <td>{category?.age || \"N/A\"}</td>\r\n//                     <td>{category?.startDate || \"N/A\"}</td>\r\n//                     <td>{category?.salary || \"N/A\"}</td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n\r\n//           {/* Pagination */}\r\n//           <nav>\r\n//             <ul className=\"pagination justify-content-center\">\r\n//               {Array.from({\r\n//                 length: Math.ceil(filteredCategories.length / itemsPerPage),\r\n//               }).map((_, index) => (\r\n//                 <li\r\n//                   key={index}\r\n//                   className={`page-item ${\r\n//                     currentPage === index + 1 ? \"active\" : \"\"\r\n//                   }`}\r\n//                 >\r\n//                   <button\r\n//                     className=\"page-link\"\r\n//                     onClick={() => paginate(index + 1)}\r\n//                   >\r\n//                     {index + 1}\r\n//                   </button>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AllCategory;\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst buttonStyle = {\r\n  color: \"white\",\r\n  backgroundColor: \"#007bff\",\r\n  borderColor: \"#007bff\",\r\n};\r\n\r\nconst AllCategory = () => {\r\n  const navigate = useNavigate();\r\n  const [data1, setData1] = useState([]); // Store fetched data\r\n  const [filteredData, setFilteredData] = useState([]); // Store filtered data\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: null,\r\n    direction: \"ascending\",\r\n  });\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(5);\r\n\r\n  // Fetch data from the API\r\n  useEffect(() => {\r\n    const fetchPostData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8000/api/category\");\r\n//  console.log(response);\r\n        // Check if the response contains the data array\r\n        if (response.data) {\r\n          setData1(response.data); // Use the nested 'data' array\r\n          console.log(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error.message);\r\n      }\r\n    };\r\n\r\n    fetchPostData();\r\n  }, []); // Empty dependency array means this runs once when the component mounts\r\n\r\n  // Search functionality\r\n  useEffect(() => {\r\n    if (Array.isArray(data1)) {\r\n      const filtered = data1.filter((item) =>\r\n        Object.values(item).some((val) =>\r\n          val?.toString().toLowerCase().includes(searchTerm.toLowerCase())\r\n        )\r\n      );\r\n      setFilteredData(filtered);\r\n      setCurrentPage(1); // Reset to first page on search\r\n    }\r\n  }, [searchTerm, data1]);\r\n\r\n  // Sort functionality\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sortConfig.key && Array.isArray(filteredData)) {\r\n      const sortedData = [...filteredData].sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n      setFilteredData(sortedData);\r\n    }\r\n  }, [sortConfig, filteredData]);\r\n\r\n  // Pagination calculations\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\nconsole.log(filteredData);\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex justify-content-between my-4\">\r\n        <h3>Member List</h3>\r\n      </div>\r\n\r\n      {/* Search Input */}\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-md-6\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-striped table-bordered table-hover\">\r\n          <thead className=\"table-dark\">\r\n            <tr>\r\n              <th\r\n                onClick={() => requestSort(\"name\")}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                Member Name{\" \"}\r\n                {sortConfig.key === \"name\" &&\r\n                  (sortConfig.direction === \"ascending\" ? \"↑\" : \"↓\")}\r\n              </th>\r\n              <th\r\n                onClick={() => requestSort(\"sex\")}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                Nomine Gender{\" \"}\r\n                {sortConfig.key === \"nomine_gender\" &&\r\n                  (sortConfig.direction === \"ascending\" ? \"↑\" : \"↓\")}\r\n              </th>\r\n              <th\r\n                onClick={() => requestSort(\"date_birthday\")}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                Birthday Date{\" \"}\r\n                {sortConfig.key === \"date_birthday\" &&\r\n                  (sortConfig.direction === \"ascending\" ? \"↑\" : \"↓\")}\r\n              </th>\r\n              <th\r\n                onClick={() => requestSort(\"action\")}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                Action{\" \"}\r\n                {sortConfig.key === \"action\" &&\r\n                  (sortConfig.direction === \"ascending\" ? \"↑\" : \"↓\")}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentItems.length > 0 ? (\r\n              currentItems.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.sex}</td>\r\n                  <td>{item.date_of_birth}</td>\r\n                  <button\r\n                    style={buttonStyle}\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() =>\r\n                      navigate(\r\n                        `/insurance-form/${item.id}/${item.name}/${item.account_number}/${item.sex}/${item.date_of_birth}`\r\n                      )\r\n                    }\r\n                  >\r\n                    Details\r\n                  </button>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"3\" className=\"text-center\">\r\n                  No data available\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center\">\r\n          <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={() => paginate(1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              First\r\n            </button>\r\n          </li>\r\n          <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={() => paginate(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              Previous\r\n            </button>\r\n          </li>\r\n          {[...Array(totalPages)].map((_, index) => (\r\n            <li\r\n              key={index}\r\n              className={`page-item ${\r\n                currentPage === index + 1 ? \"active\" : \"\"\r\n              }`}\r\n            >\r\n              <button className=\"page-link\" onClick={() => paginate(index + 1)}>\r\n                {index + 1}\r\n              </button>\r\n            </li>\r\n          ))}\r\n          <li\r\n            className={`page-item ${\r\n              currentPage === totalPages ? \"disabled\" : \"\"\r\n            }`}\r\n          >\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={() => paginate(currentPage + 1)}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              Next\r\n            </button>\r\n          </li>\r\n          <li\r\n            className={`page-item ${\r\n              currentPage === totalPages ? \"disabled\" : \"\"\r\n            }`}\r\n          >\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={() => paginate(totalPages)}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              Last\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      {/* Page Info */}\r\n      <div className=\"text-center mt-2\">\r\n        <p>\r\n          Showing {indexOfFirstItem + 1} to{\" \"}\r\n          {Math.min(indexOfLastItem, filteredData.length)} of{\" \"}\r\n          {filteredData.length} entries\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllCategory;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,IAAI,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/D,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,OAAO;EACdC,eAAe,EAAE,SAAS;EAC1BC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC;IAC3CqB,GAAG,EAAE,IAAI;IACTC,SAAS,EAAE;EACb,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}